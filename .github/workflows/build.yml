name: Build Odyssey

on:
  push:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: SebRollen/toml-action@v1.2.0
        id: read_toml
        with:
          file: 'Cargo.toml'
          field: 'package.version'

      - name: export cargo version to env for build
        run: |
          echo "ODYSSEY_RELEASE_VERSION='${{ steps.read_toml.outputs.value }}" >> "$GITHUB_ENV"

      - name: append branch to version if not main
        if: github.ref != 'refs/heads/main'
        run: |
          echo "ODYSSEY_RELEASE_VERSION='${ODYSSEY_RELEASE_VERSION}-${{github.ref_name}}'" >> "$GITHUB_ENV"

      - name: install dependencies
        run: sudo apt install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf g++-aarch64-linux-gnu gcc-aarch64-linux-gnu gcc g++

      - name: Update Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: "-Awarnings"

      - name: Compile, Copy, and Compress armv7-unknown-linux-gnueabihf
        run: |
          BUILD_NAME=odyssey_armv7-unknown-linux-gnueabihf
          cargo build --release --target armv7-unknown-linux-gnueabihf
          mkdir $BUILD_NAME
          mv target/armv7-unknown-linux-gnueabihf/release/odyssey $BUILD_NAME
          cp resources/default.yaml $BUILD_NAME
          tar -czvf $BUILD_NAME.tar.gz -C $BUILD_NAME odyssey default.yaml

      - name: upload armv7-unknown-linux-gnueabihf artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: odyssey_armv7-unknown-linux-gnueabihf
          path: odyssey_armv7-unknown-linux-gnueabihf/*

      - name: Compile, Copy, and Compress aarch64-unknown-linux-gnu
        run: |
          BUILD_NAME=odyssey_aarch64-unknown-linux-gnu
          cargo build --release --target aarch64-unknown-linux-gnu
          mkdir $BUILD_NAME
          mv target/aarch64-unknown-linux-gnu/release/odyssey $BUILD_NAME
          cp resources/default.yaml $BUILD_NAME
          tar -czvf $BUILD_NAME.tar.gz -C $BUILD_NAME odyssey default.yaml

      - name: upload aarch64-unknown-linux-gnu artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: odyssey_aarch64-unknown-linux-gnu
          path: odyssey_aarch64-unknown-linux-gnu/*

      - name: Compile, Copy, and Compress x86_64-unknown-linux-gnu
        run: |
          BUILD_NAME=odyssey_x86_64-unknown-linux-gnu
          cargo build --release --target x86_64-unknown-linux-gnu
          mkdir $BUILD_NAME
          mv target/x86_64-unknown-linux-gnu/release/odyssey $BUILD_NAME
          cp resources/default.yaml $BUILD_NAME
          tar -czvf $BUILD_NAME.tar.gz -C $BUILD_NAME odyssey default.yaml

      - name: upload x86_64-unknown-linux-gnu artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: odyssey_x86_64-unknown-linux-gnu
          path: odyssey_x86_64-unknown-linux-gnu/*

      - uses: ncipollo/release-action@v1.18.0
        if: github.ref == 'refs/heads/main'
        with:
          artifacts: "odyssey*.tar.gz"
          tag: v${{ steps.read_toml.outputs.value }}
          skipIfReleaseExists: true
          generateReleaseNotes: true
          commit: ${{github.sha}}

      - uses: ncipollo/release-action@v1.18.0
        if: github.ref != 'refs/heads/main'
        with:
          artifacts: "*odyssey*.tar.gz"
          tag: BRANCH_${{github.ref_name}}
          skipIfReleaseExists: false
          allowUpdates: true
          prerelease: true
          generateReleaseNotes: true
          commit: ${{github.sha}}
