name: Build Odyssey

on:
  push:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: ""

      - name: Install Cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Compile armv7
        run: cross build --release --target armv7-unknown-linux-gnueabihf

      - uses: SebRollen/toml-action@v1.2.0
        id: read_toml
        with:
          file: 'Cargo.toml'
          field: 'package.version'

      - name: Copy & Compress output
        id: compress
        run: |
          cp target/armv7-unknown-linux-gnueabihf/release/odyssey odyssey
          cp target/armv7-unknown-linux-gnueabihf/release/default.yaml default.yaml
          cp target/armv7-unknown-linux-gnueabihf/release/apiHelper.py apiHelper.py
          tar -czvf odyssey.tar.gz odyssey default.yaml apiHelper.py
          echo "archive=$ARCHIVE" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4.3.1
        with:
          name: odyssey
          path: |
            odyssey
            default.yaml
            apiHelper.py

      - uses: ncipollo/release-action@v1.14.0
        if: github.ref == 'refs/heads/main'
        with:
          artifacts: odyssey.tar.gz
          tag: v${{ steps.read_toml.outputs.value }}
          skipIfReleaseExists: true
          generateReleaseNotes: true
          commit: ${{github.sha}}
      - uses: ncipollo/release-action@v1.14.0
        if: github.ref != 'refs/heads/main'
        with:
          artifacts: odyssey.tar.gz
          tag: BRANCH_${{github.ref_name}}
          skipIfReleaseExists: false
          allowUpdates: true
          prerelease: true
          generateReleaseNotes: true
          commit: ${{github.sha}}
